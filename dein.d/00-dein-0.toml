[[plugins]]
repo = 'Shougo/unite.vim'
hook_add = '''
  nnoremap <silent> fb :<C-u>Unite buffer<CR>
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'osyo-manga/unite-quickfix'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
  let g:quickrun_config = {
    \ "_" : {
      \ "hook/unite_quickfix/enable_failure" : 1,
      \ "hook/close_unite_quickfix/enable_hook_loaded" : 1,
      \ "hook/close_quickfix/enable_exit" : 1,
      \ "hook/close_buffer/enable_failure" : 1,
      \ "hook/close_buffer/enable_empty_data" : 1,
      \ "hook/inu/enable" : 1,
      \ "hook/inu/wait" : 20,
      \ "outputter" : "multi:buffer:quickfix",
      \ "outputter/buffer/split" : ":botright 5sp",
      \ "outputter/buffer/close_on_empty" : 1,
      \ "runner" : "vimproc",
      \ "runner/vimproc/updatetime" : 60,
    \ }
  \ }
  let g:quickrun_config.processing = {
    \ 'command': 'processing-java',
    \ 'exec': '%c --sketch=%s:p:h/ --output=/tmp/processing --run --force'
  \ }
  
  let g:quickrun_config = get(g:, 'quickrun_config', {})
  nnoremap <F5> :QuickRun
  nnoremap <expr><silent> <C-c> quickrun#is_running() ? quickrun#sweep_sessions() : "\<C-c>"
'''

[[plugins]]
repo = 'osyo-manga/shabadou.vim'

[[plugins]]
repo = 'w0rp/ale'
on_path = '*'
hook_add = '''
  let g:ale_sign_column_always = 1
  let g:ale_sign_error = '⨉'
  let g:ale_sign_warning = '⚠'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
  let g:ale_lint_on_enter = 1
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 'never'
  let g:ale_set_loclist = 0
  let g:ale_set_quickfix = 0
  let g:ale_open_list = 0
  let g:ale_keep_list_window_open = 0
  nmap [ale] <Nop>
  map <C-k> [ale]
  nmap <silent> [ale]<C-P> <Plug>(ale_previous)
  nmap <silent> [ale]<C-N> <Plug>(ale_next)
'''

[[plugins]]
repo = 'vim-scripts/taglist.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set updatetime=250
  set signcolumn=yes
  nmap ]h <Plug>GitGutterNextHunk
  nmap [h <Plug>GitGutterPrevHunk
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'Shougo/neomru.vim'

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'
hook_add = '''
  nnoremap <silent> <F1> :help@ja<Cr>
  inoremap <silent> <F1> <ESC>:help@ja<Cr>
'''

[[plugins]]
repo = 'Shougo/vimfiler'
hook_add = '''
  let g:vimfiler_as_default_explorer = 1
  let g:vimfiler_tree_indentation = 2
  let g:vimfiler_enable_auto_cd = 1
  let g:vimfiler_ignore_pattern='\(^\.\|\~$\|\.pyc$\|\.[oad]$\)'
  autocmd FileType vimfiler nmap <buffer> <CR> <Plug>(vimfiler_expand_or_edit)
  nnoremap <silent> <F2> :VimFiler -split -winwidth=30 -simple -no-quit<Cr>
'''

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'sjl/gundo.vim'
hook_add = '''
  let g:gundo_width = 30
  let g:gundo_help = 0
  let g:gundo_preview_bottom = 1
  let g:gundo_preview_statusline = 1
  let g:gundo_tree_statusline = 1
  let g:gundo_return_on_revert = 0
  nmap U :<C-u>GundoToggle<CR>
'''

[[plugins]]
repo = 'simeji/winresizer'
